import logging
from typing import List

from sqlalchemy import delete, insert, select
from sqlalchemy.ext.asyncio import AsyncSession

from core.models.relationships import VersionVulnerability as VersionVulnerabilityDBModel
from core.models.vulnerability import Vulnerability as VulnerabilityDBModel

logger = logging.getLogger()


async def replace_version_vulnerabilities(
    db_session: AsyncSession,
    version_vulnerabilities: List[tuple[int, List[str]]],
):
    version_ids = [version_id for version_id, _ in version_vulnerabilities]

    await db_session.execute(
        delete(VersionVulnerabilityDBModel).where(
            VersionVulnerabilityDBModel.version_id.in_(version_ids)
        )
    )

    inserted_vulnerabilities = 0
    inserted_version_vulnerability_links = 0
    osv_ids: set[str] = set()

    for _, osv_id in version_vulnerabilities:
        osv_ids.update(osv_id)

    result = await db_session.execute(
        select(VulnerabilityDBModel).where(VulnerabilityDBModel.osv_id.in_(osv_ids))
    )
    existing_vulns = result.scalars().all()
    osv_id_to_db_id = {vuln.osv_id: vuln.id for vuln in existing_vulns}
    missing_osv_ids = osv_ids - set(osv_id_to_db_id.keys())

    for osv_id in missing_osv_ids:
        vuln = VulnerabilityDBModel(osv_id=osv_id)
        db_session.add(vuln)
        await db_session.flush()  # to populate `vuln.id`
        osv_id_to_db_id[osv_id] = vuln.id
        inserted_vulnerabilities += 1

    await db_session.flush()

    inserts = []

    for version_id, osv_id_list in version_vulnerabilities:
        for osv_id in osv_id_list:
            inserts.append(
                {
                    "version_id": version_id,
                    "vulnerability_id": osv_id_to_db_id[osv_id],
                }
            )
            inserted_version_vulnerability_links += 1

    if inserts:
        await db_session.execute(insert(VersionVulnerabilityDBModel).values(inserts))

    await db_session.commit()
    logger.info(
        f"Vulnerabilities: {inserted_vulnerabilities} inserted; "
        f"Links: {inserted_version_vulnerability_links} inserted; "
    )
